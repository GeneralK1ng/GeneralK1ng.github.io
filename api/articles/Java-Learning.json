{"title":"Java_Learning(Week 1)","uid":"b6ddc4ee88d4afe7e2e1051d594b4d83","slug":"Java-Learning","date":"2023-09-18T08:56:41.000Z","updated":"2023-09-18T14:11:52.332Z","comments":true,"path":"api/articles/Java-Learning.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/codeBackground.png","content":"<p>整理CPT111这门课程（Java Programming）的一些笔记，从最简单的开始，不是简单的翻译，但是还是会以学校进程和教材为主。</p>\n<h1 id=\"选择一个趁手的IDE\"><a href=\"#选择一个趁手的IDE\" class=\"headerlink\" title=\"选择一个趁手的IDE\"></a>选择一个趁手的IDE</h1><p>在我们选择IDE前，容我先简单介绍一下什么是IDE，为什么我们需要IDE。</p>\n<h2 id=\"什么是IDE？\"><a href=\"#什么是IDE？\" class=\"headerlink\" title=\"什么是IDE？\"></a>什么是IDE？</h2><p>IDE是集成开发环境（Integrated Development Environment）的缩写。是一种软件应用程序，旨在帮助程序员编写、调试和管理他们的代码项目。IDE为开发者提供了一套工具和功能，使他们更轻松地进行软件开发工作。以下是IDE的一些主要特点和功能：</p>\n<ol>\n<li><strong>代码编辑器</strong>：IDE包含一个文本编辑器，用于编写源代码。这个编辑器通常会提供语法高亮显示、自动完成、代码格式化等功能，以帮助程序员编写更高效和规范的代码。</li>\n<li><strong>编译器和解释器</strong>：IDE集成了编译器（对于编译型语言）或解释器（对于解释型语言），可以将源代码转换为可执行的程序或直接执行代码。这使得程序员可以更轻松地检查代码的语法错误和逻辑错误。</li>\n<li><strong>调试器</strong>：IDE通常包含一个强大的调试器，用于帮助程序员识别和修复代码中的错误。调试器允许程序员逐步执行代码、查看变量的值，并在运行时检测问题。</li>\n<li><strong>项目管理工具</strong>：IDE允许程序员创建和管理代码项目。这包括创建、打开、保存和组织文件和文件夹，以及管理依赖项和库。</li>\n<li><strong>版本控制集成</strong>：许多IDE集成了版本控制工具，如Git，以便程序员能够更轻松地跟踪和管理代码的版本历史。</li>\n<li><strong>自动化构建工具</strong>：IDE通常包含自动构建工具，可以自动构建和部署代码项目，减少了手动操作的需求。</li>\n<li><strong>代码分析工具</strong>：IDE可以提供代码分析和性能分析工具，帮助程序员识别潜在的性能瓶颈和代码质量问题。</li>\n<li><strong>集成开发环境</strong>：IDE将上述所有功能整合在一个统一的界面中，使程序员能够在一个环境中进行所有开发活动，提高了工作效率。</li>\n</ol>\n<h2 id=\"我们为什么需要IDE？\"><a href=\"#我们为什么需要IDE？\" class=\"headerlink\" title=\"我们为什么需要IDE？\"></a>我们为什么需要IDE？</h2><p>总结两个字，方便！方便就完事了，理论上你完全可以用电脑自带的笔记本进行代码的书写，但是我相信没有人会这么干，趁手的IDE可以大幅度提升你的开发效率和开发质量，并且可以帮助你更好的后期维护和debug(虽然这往往和IDE没有多大关系)。</p>\n<h2 id=\"安装IDEA\"><a href=\"#安装IDEA\" class=\"headerlink\" title=\"安装IDEA\"></a>安装IDEA</h2><p>IntelliJ IDEA（通常称为IDEA）是一款由JetBrains开发的强大集成开发环境（IDE），主要用于Java、Kotlin和其他编程语言的开发。它具有许多优点，如智能代码编辑、强大的代码导航、集成的构建工具、版本控制、调试器和丰富的插件生态系统等。下面是安装IntelliJ IDEA的详细步骤：</p>\n<p><strong>安装IntelliJ IDEA：</strong></p>\n<ol>\n<li><strong>下载IntelliJ IDEA：</strong> 前往JetBrains官方网站（ <a href=\"https://www.jetbrains.com/idea/download/\">https://www.jetbrains.com/idea/download/</a> ），  选择适用于您操作系统的版本（Windows、macOS、Linux）并下载Community Edition（免费版本）或Ultimate Edition（付费版本）。初学者完全使用社区版本完全就够用了，虽然我们学校提供了教育免费版，如果不嫌麻烦的话也可以。</li>\n<li><strong>安装JDK：</strong> IntelliJ IDEA需要Java Development Kit (JDK) 才能运行。虽然目前我知道好像IDEA可以自己给你装JDK，并且有很完备的版本管理，非常方便。</li>\n<li><strong>安装IntelliJ IDEA：</strong><ul>\n<li>在Windows上，运行下载的安装程序（<code>.exe</code>文件）并按照提示进行安装。</li>\n<li>在macOS上，将下载的IntelliJ IDEA文件拖到“应用程序”文件夹中。</li>\n<li>在Linux上，解压下载的文件并运行<code>idea.sh</code>脚本。</li>\n</ul>\n</li>\n<li><strong>启动IntelliJ IDEA：</strong> 打开安装好的IntelliJ IDEA应用程序。</li>\n<li><strong>激活或注册：</strong><ul>\n<li>如果你选择Ultimate Edition，并且有有效的许可证，可以直接输入许可证信息激活。</li>\n<li>如果你选择Community Edition，它是免费的，无需激活。</li>\n</ul>\n</li>\n<li><strong>配置首选项：</strong> 在首次运行IDEA时，您可以根据您的偏好配置IDEA的外观、主题、插件等设置。</li>\n</ol>\n<p>一些基本的设置自己上网搜索，比如字体，主题之类的，这里不作详细介绍。</p>\n<h2 id=\"为什么不用学校推荐的NetBeans\"><a href=\"#为什么不用学校推荐的NetBeans\" class=\"headerlink\" title=\"为什么不用学校推荐的NetBeans?\"></a>为什么不用学校推荐的NetBeans?</h2><p>我觉得难用，就是这么简单，难用，而且后续很多的企业开发当中基本上公司配备的Java用的IDE都是IDEA，你也不想特立独行吧？（</p>\n<h1 id=\"打出你的第一句Hello-Word！\"><a href=\"#打出你的第一句Hello-Word！\" class=\"headerlink\" title=\"打出你的第一句Hello Word！\"></a>打出你的第一句Hello Word！</h1><p>为什么要打出Hello World？别问，问就是传统。</p>\n<h2 id=\"创建新项目\"><a href=\"#创建新项目\" class=\"headerlink\" title=\"创建新项目\"></a>创建新项目</h2><ol>\n<li>打开IntelliJ IDEA。</li>\n<li>在欢迎屏幕上，选择 “Create New Project”（创建新项目）。</li>\n</ol>\n<img src=\"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/New Project.png\">\n\n<h2 id=\"配置项目\"><a href=\"#配置项目\" class=\"headerlink\" title=\"配置项目\"></a>配置项目</h2><ol>\n<li>在 “Project name”（项目名称）字段中输入您的项目名称，例如 “CPT111”。</li>\n<li>在 “Project location”（项目位置）字段中选择您要保存项目的文件夹位置。</li>\n<li>选择JDK，没有JDK就用IDEA给你装一个，免去了复杂的环境配置。</li>\n<li>点击 “Finish”（完成）。</li>\n</ol>\n<p>创建后的界面如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/initPage.png\"></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>其实这个默认的Main方法就是最普通的HelloWorld了，对着这个代码直接右键运行就好。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/HelloWorld.png\"></p>\n<h1 id=\"简单解释一下代码\"><a href=\"#简单解释一下代码\" class=\"headerlink\" title=\"简单解释一下代码\"></a>简单解释一下代码</h1><p>与非常简单的Python不同，Java的 Hello World 令人有些费解，但是不急，逐行分析一下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Main {\n    public static void main(String[] args) {\n\n        System.out.println(\"Hello world!\");\n    }\n}</code></pre>\n\n<ol>\n<li><code>public</code>：这是一个访问修饰符，表示这个类是公共的，可以从其他类中访问。在Java中，类通常会被声明为<code>public</code>、<code>private</code>或<code>protected</code>，以控制其可见性。</li>\n<li><code>class</code>：这个关键词用于定义一个类。在Java中，所有的代码都必须位于类中，这是面向对象编程的基本概念。</li>\n<li><code>HelloWorld</code>：这是类的名称，通常类名的第一个字母大写。类名必须与文件名相匹配，并且在Java中，每个程序都必须包含至少一个类，其中一个类必须包含一个<code>main</code>方法，作为程序的入口点。</li>\n<li><code>{</code> 和 <code>}</code>：这些大括号用于定义类的开始和结束，以及方法的开始和结束。在Java中，大括号用于组织代码块。</li>\n<li><code>public static void main(String[] args)</code>：这是一个特殊的方法，叫做<code>main</code>方法。它是Java程序的入口点，当程序运行时，会从<code>main</code>方法开始执行。让我们来解释<code>main</code>方法的各个部分：<ul>\n<li><code>public</code>：同样是访问修饰符，表示<code>main</code>方法是公共的，可以从其他类中访问。</li>\n<li><code>static</code>：这是一个关键词，表示<code>main</code>方法是静态的，可以在不创建类的实例的情况下调用。</li>\n<li><code>void</code>：这是返回类型，表示<code>main</code>方法不返回任何值。</li>\n<li><code>main</code>：这是方法的名称，Java程序会从这里开始执行。</li>\n<li><code>(String[] args)</code>：这是方法的参数列表。在这里，<code>main</code>方法接受一个字符串数组作为参数，通常用来接收命令行参数。</li>\n</ul>\n</li>\n<li><code>System.out.println(\"Hello, World!\");</code>：这是<code>main</code>方法中的一行代码，用于在控制台上打印文本消息。让我们分解这行代码：<ul>\n<li><code>System</code>：这是一个类，代表了Java的系统资源和标准输入/输出。</li>\n<li><code>out</code>：这是<code>System</code>类的一个静态成员，代表标准输出流。</li>\n<li><code>println</code>：这是一个方法，用于将文本输出到标准输出流，并在最后自动添加一个换行符。</li>\n<li><code>\"Hello, World!\"</code>：这是要打印的文本消息，包含在双引号中。</li>\n</ul>\n</li>\n</ol>\n<p>如果这上面的你都不能理解，也别急，你只要知道<code>System.out.println(\"Hello world!\")</code>这一句是输出就好，也就是打印。</p>\n","text":"整理CPT111这门课程（Java Programming）的一些笔记，从最简单的开始，不是简单的翻译，但是还是会以学校进程和教材为主。 选择一个趁手的IDE在我们选择IDE前，容我先简单介绍一下什么是IDE，为什么我们需要IDE。 什么是IDE？IDE是集成开发环境（Integ...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":44,"path":"api/tags/笔记.json"},{"name":"Java初学","slug":"Java初学","count":10,"path":"api/tags/Java初学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E4%B8%80%E4%B8%AA%E8%B6%81%E6%89%8B%E7%9A%84IDE\"><span class=\"toc-text\">选择一个趁手的IDE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFIDE%EF%BC%9F\"><span class=\"toc-text\">什么是IDE？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81IDE%EF%BC%9F\"><span class=\"toc-text\">我们为什么需要IDE？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85IDEA\"><span class=\"toc-text\">安装IDEA</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E7%94%A8%E5%AD%A6%E6%A0%A1%E6%8E%A8%E8%8D%90%E7%9A%84NetBeans\"><span class=\"toc-text\">为什么不用学校推荐的NetBeans?</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%87%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%8F%A5Hello-Word%EF%BC%81\"><span class=\"toc-text\">打出你的第一句Hello Word！</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%B0%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">创建新项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">配置项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">运行</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">简单解释一下代码</span></a></li></ol>","author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}},"mapped":true,"prev_post":{"title":"Java_Learning(Week2)","uid":"4b98df5a945ea20ec148c80f048ac74c","slug":"Java-Learning-week2","date":"2023-09-18T13:14:43.000Z","updated":"2023-09-18T14:11:48.813Z","comments":true,"path":"api/articles/Java-Learning-week2.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/codeBackground.png","text":"变量是什么？变量是计算机编程中的一个基本概念，用于存储和表示数据。变量是程序中用来保存数据的一种标识符，它可以是数字、文本、对象或任何其他数据类型的值。通过给变量赋值，程序可以在运行过程中存储、操作和使用数据。 数据类型在Java中，变量可以分为以下几种主要类型： 原始数据类型（...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":44,"path":"api/tags/笔记.json"},{"name":"Java初学","slug":"Java初学","count":10,"path":"api/tags/Java初学.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}},"next_post":{"title":"核方法","uid":"f742bd6c1e232d7ef58dbc0bfbd5e353","slug":"Kernel-methods","date":"2023-07-29T07:55:10.000Z","updated":"2023-07-30T05:58:28.803Z","comments":true,"path":"api/articles/Kernel-methods.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/jianyue.png","text":"核方法（Kernel Methods）“Kernel methods”（核方法）是机器学习领域中一类重要的算法和技术，它们主要用于处理非线性问题和高维数据。核方法在分类、回归和聚类等任务中具有广泛的应用，并在支持向量机（Support Vector Machines，SVM）等算...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":44,"path":"api/tags/笔记.json"},{"name":"Machine Learning","slug":"Machine-Learning","count":17,"path":"api/tags/Machine-Learning.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}}}