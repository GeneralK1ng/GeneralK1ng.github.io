{"title":"MySQL Review-3","uid":"6381f3e54a84ac6dc19cc4600b2aeb52","slug":"MySQL-Review-3","date":"2023-12-05T09:19:22.000Z","updated":"2023-12-06T09:48:20.466Z","comments":true,"path":"api/articles/MySQL-Review-3.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/MySQL-image.png","content":"<p>今天继续复习<code>MySQL</code>当中比较重要的一点，但是前面也已经涉及到了，就是<code>MySQL</code>中的约束。</p>\n<p>但是其实前面的<code>UNIQUE</code>，<code>PRIMARY</code>之类的也算约束。</p>\n<h1 id=\"约束\"><a href=\"#约束\" class=\"headerlink\" title=\"约束\"></a>约束</h1><p>在关系数据库中，约束是一种用于定义和强制表中数据规则的机制。约束确保了数据的完整性、一致性和可靠性。通过使用约束，数据库管理系统可以强制执行数据表中的规则，防止插入、更新或删除操作导致数据不一致或错误。</p>\n<p>简单来说约束就是你在建立表的时候对一些字段的约束条件，比如前面提到的主键，唯一键都是比较重要的约束条件。</p>\n<h2 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h2><p>当在MySQL中添加约束时，你可以使用以下语法格式：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CONSTRAINT constraint_name\nCONSTRAINT_TYPE (constraint_details);</code></pre>\n\n<p>这里的 <code>constraint_name</code> 是你给约束指定的名称，<code>CONSTRAINT_TYPE</code> 是约束的类型，而 <code>constraint_details</code> 是约束的具体细节。下面是几个常见约束的例子：</p>\n<p>比方说我们之前提到的主键</p>\n<h3 id=\"主键约束\"><a href=\"#主键约束\" class=\"headerlink\" title=\"主键约束\"></a>主键约束</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CONSTRAINT pk_example PRIMARY KEY (column1, column2, ...);</code></pre>\n\n<h3 id=\"外键约束\"><a href=\"#外键约束\" class=\"headerlink\" title=\"外键约束\"></a>外键约束</h3><p>这个约束有一些知识点需要记忆，这里只给出语法，后面会讲</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name2\nADD CONSTRAINT fk_example\nFOREIGN KEY (column1) REFERENCES table_name1(column1);</code></pre>\n\n<h3 id=\"唯一约束\"><a href=\"#唯一约束\" class=\"headerlink\" title=\"唯一约束\"></a>唯一约束</h3><p>这个更加熟悉，前面也讲过了</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CONSTRAINT uk_example UNIQUE (column1, column2, ...);</code></pre>\n\n<h3 id=\"检查约束\"><a href=\"#检查约束\" class=\"headerlink\" title=\"检查约束\"></a>检查约束</h3><p>这个和外键一样，放到后面讲，这里只给出语法格式</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CONSTRAINT chk_example CHECK (condition);</code></pre>\n\n<p>这里介绍了一些常用的约束条件，但是其实说回来一般还是遵循最上面的通用的语法格式。</p>\n<h2 id=\"外键\"><a href=\"#外键\" class=\"headerlink\" title=\"外键\"></a>外键</h2><p>这我猜测应该是一个非常重要的考点，虽然在实际开发中一般通过后端采取逻辑外键和事务处理来保证数据的完整性质，但是毕竟考试嘛，谁猜得到呢？</p>\n<p>在MySQL中，外键（Foreign Key）是一种用于建立表与表之间关联的约束。外键用于定义两个表之间的引用关系，其中一个表的列值（或列组合）是另一个表的主键或唯一键的值。这样的关联关系有助于维护数据的完整性，确保相关表之间的数据一致性。</p>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ol>\n<li><strong>引用表（Referenced Table）：</strong> 包含被引用列的表称为引用表，通常是主键或唯一键的表。</li>\n<li><strong>引用列（Referenced Column）：</strong> 在引用表中的主键或唯一键列被称为引用列。</li>\n<li><strong>外键表（Referencing Table）：</strong> 包含外键列的表称为外键表，它引用了引用表中的列。</li>\n<li><strong>外键列（Foreign Key Column）：</strong> 在外键表中与引用列相对应的列被称为外键列。</li>\n</ol>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>上面已经介绍了表已经建立后的语法，这里两种都再给出一下。</p>\n<p>在创建表时定义外键：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE table_name1 (\n    column1 datatype PRIMARY KEY,\n    column2 datatype,\n    ...\n);\n\nCREATE TABLE table_name2 (\n    column1 datatype,\n    column2 datatype,\n    ...\n    FOREIGN KEY (column1) REFERENCES table_name1(column1);\n);</code></pre>\n\n<p>在已有表上添加外键：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name2\nADD FOREIGN KEY (column1) REFERENCES table_name1(column1);</code></pre>\n\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ol>\n<li><strong>数据一致性：</strong> 外键确保在外键表中的每个值都有对应的引用表中的值，保持数据的一致性。</li>\n<li><strong>防止孤立行：</strong> 外键防止在外键表中存在不属于引用表的孤立行，即不存在对应的引用值的行。</li>\n<li><strong>级联操作：</strong> 外键可以定义级联操作，例如在引用表中更新主键值时，外键表中相关的外键列的值也会自动更新。</li>\n</ol>\n<h3 id=\"参照选项\"><a href=\"#参照选项\" class=\"headerlink\" title=\"参照选项\"></a>参照选项</h3><p>当定义外键关系时，可以使用不同的参照选项来规定在主表（被引用表）的记录被更新或删除时，应该如何处理从表（引用表、外键表）的记录。以下是一些常见的参照选项：</p>\n<p><strong>RESTRICT（限制）:</strong></p>\n<ul>\n<li>如果存在关联记录，阻止对主表的相关操作。如果主表中的记录正在被引用表引用，那么主表的记录不能被删除或更新，以保持引用完整性。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) ON DELETE RESTRICT\n);</code></pre>\n\n<p><strong>CASCADE（级联）:</strong></p>\n<ul>\n<li>如果主表的记录被更新或删除，引用表中相关的记录也会被相应地更新或删除。这就是级联操作。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) ON DELETE CASCADE\n);</code></pre>\n\n<p><strong>SET NULL（设置为空）:</strong></p>\n<ul>\n<li>如果主表的记录被更新或删除，引用表中相关的外键列将被设置为NULL。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) ON DELETE SET NULL\n);</code></pre>\n\n<p><strong>SET DEFAULT（设置为默认值）:</strong></p>\n<ul>\n<li>如果主表的记录被更新或删除，引用表中相关的外键列将被设置为它们的默认值。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT DEFAULT 1,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) ON DELETE SET DEFAULT\n);</code></pre>\n\n<p>这些选项可以应用于两种情况：<code>ON DELETE</code> 和 <code>ON UPDATE</code>。前者用于指定在主表的记录被删除时应该如何处理，而后者用于指定在主表的记录被更新时应该如何处理。</p>\n<p>意思就是，当主表（被引用表）发生更改的时候，从表（外键表）会怎么样，会根据你提前设计的这些进行一些默认操作。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>考虑一个部门（<code>departments</code>）和员工（<code>employees</code>）两个表的情况：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE departments (\n    department_id INT PRIMARY KEY,\n    department_name VARCHAR(50)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department_id INT,\n    FOREIGN KEY (department_id) REFERENCES departments(department_id)\n);</code></pre>\n\n<ol>\n<li><strong>确保数据一致性：</strong> 外键关系确保<code>employees</code>表中的每个员工的<code>department_id</code>值都存在于<code>departments</code>表的<code>department_id</code>列中。这样，你不能在<code>employees</code>表中插入一个不存在的部门ID，从而确保了数据的一致性。</li>\n<li><strong>防止孤立行：</strong> 外键关系防止<code>employees</code>表中的行变得孤立，即存在不属于<code>departments</code>表中任何部门的员工。每个在<code>employees</code>表中的<code>department_id</code>值都必须在<code>departments</code>表中有对应的部门ID。</li>\n<li><strong>禁止删除被引用的行：</strong> 如果你尝试删除<code>departments</code>表中的某个部门（带有相关的员工），MySQL默认情况下将不允许这样的删除，以防止破坏外键约束。这防止了误删除操作，确保数据的完整性。</li>\n<li><strong>级联操作：</strong> 可以通过定义外键时的级联选项来实现级联操作。例如，如果定义了级联更新，当<code>departments</code>表中的某个部门ID更新时，<code>employees</code>表中所有相关的<code>department_id</code>也会自动更新</li>\n</ol>\n<p>具体来说：</p>\n<p>假设我们有两张表，一张是部门表，另一张是员工表。我们想要在员工表中记录每个员工所在的部门。</p>\n<p>部门表 (<code>departments</code>)：</p>\n<table>\n<thead>\n<tr>\n<th>department_id</th>\n<th>department_name</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>Sales Department</td>\n</tr>\n<tr>\n<td>2</td>\n<td>IT Department</td>\n</tr>\n<tr>\n<td>3</td>\n<td>HR Department</td>\n</tr>\n</tbody></table>\n<p>员工表 (<code>employees</code>)：</p>\n<table>\n<thead>\n<tr>\n<th>employee_id</th>\n<th>first_name</th>\n<th>last_name</th>\n<th>department_id</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>101</td>\n<td>John</td>\n<td>Smith</td>\n<td>1</td>\n</tr>\n<tr>\n<td>102</td>\n<td>Emily</td>\n<td>Johnson</td>\n<td>2</td>\n</tr>\n<tr>\n<td>103</td>\n<td>Michael</td>\n<td>Wang</td>\n<td>1</td>\n</tr>\n</tbody></table>\n<h4 id=\"为什么使用外键？\"><a href=\"#为什么使用外键？\" class=\"headerlink\" title=\"为什么使用外键？\"></a>为什么使用外键？</h4><ol>\n<li><strong>关联员工和部门：</strong> 我们使用外键来确保员工表中的 <code>department_id</code> 值始终对应着部门表中的 <code>department_id</code> 值。这样，我们知道每个员工属于哪个部门。</li>\n<li><strong>防止错误：</strong> 外键帮助我们防止错误的数据插入，例如，如果我们试图在员工表中插入一个不存在的部门ID，系统会阻止这样的操作。</li>\n</ol>\n<h4 id=\"外键语法中的哪个是引用表，哪个是外键表？\"><a href=\"#外键语法中的哪个是引用表，哪个是外键表？\" class=\"headerlink\" title=\"外键语法中的哪个是引用表，哪个是外键表？\"></a>外键语法中的哪个是引用表，哪个是外键表？</h4><p>在这个例子中：</p>\n<ul>\n<li><strong>被引用表 (<code>Referenced Table</code>)：</strong> 部门表 (<code>departments</code>) 是引用表，因为它包含了被引用的列 <code>department_id</code>，这是员工表中 <code>department_id</code> 列的来源。</li>\n<li><strong>外键表 (<code>Referencing Table</code>)：</strong> 员工表 (<code>employees</code>) 是外键表，因为它包含了外键列 <code>department_id</code>，这是与部门表中的 <code>department_id</code> 列相关联的列。</li>\n</ul>\n<p>外键建立了两张表之间的关系，就像一种连接。它确保了员工表中的每个员工都与部门表中的一个部门相对应，而且部门表中的每个部门都可以与员工表中的多个员工相对应。这种关系有助于我们更好地组织和理解数据。</p>\n<h4 id=\"操作被引用表（departments）：\"><a href=\"#操作被引用表（departments）：\" class=\"headerlink\" title=\"操作被引用表（departments）：\"></a>操作被引用表（<code>departments</code>）：</h4><ol>\n<li><strong>插入新的部门：</strong> 如果你想在<code>departments</code>表中插入新的部门，这是允许的，因为<code>departments</code>表是引用表，没有其他表直接引用它。</li>\n<li><strong>更新部门ID：</strong> 如果你更新了<code>departments</code>表中的某个部门ID，且该部门ID在<code>employees</code>表的<code>department_id</code>列中有对应的值，系统的默认设置下可能会阻止这个更新操作。这是因为外键关系会防止引用表中的主键（或唯一键）发生变化，以维护数据的完整性。你可能需要先更新<code>employees</code>表中的相关外键列，然后再更新<code>departments</code>表。</li>\n<li><strong>删除部门：</strong> 如果你尝试删除<code>departments</code>表中的某个部门，系统可能会阻止这个操作，因为还存在与该部门相关联的员工（在<code>employees</code>表中有相应的<code>department_id</code>）。你可能需要先删除相关的员工记录，然后才能删除部门。</li>\n</ol>\n<h4 id=\"操作外键表（employees）：\"><a href=\"#操作外键表（employees）：\" class=\"headerlink\" title=\"操作外键表（employees）：\"></a>操作外键表（<code>employees</code>）：</h4><ol>\n<li><strong>插入新员工：</strong> 你可以在<code>employees</code>表中插入新员工，但是要确保插入的<code>department_id</code>值存在于<code>departments</code>表中，否则系统会阻止这个操作。</li>\n<li><strong>更新员工所在部门：</strong> 如果你更新了<code>employees</code>表中的某个员工的<code>department_id</code>，只要新的<code>department_id</code>值在<code>departments</code>表中存在，这是允许的。</li>\n<li><strong>删除员工：</strong> 你可以删除<code>employees</code>表中的员工，不会直接影响<code>departments</code>表。但是，如果你删除了<code>departments</code>表中的某个部门，而该部门在<code>employees</code>表中有员工，系统可能会阻止这个操作，要求你先删除相关的员工。</li>\n</ol>\n<h2 id=\"检查约束-1\"><a href=\"#检查约束-1\" class=\"headerlink\" title=\"检查约束\"></a>检查约束</h2><p>在MySQL中，检查约束（Check Constraint）是一种用于定义在插入或更新行时必须满足的条件的机制。它允许你指定在某个列或一组列上的数据必须满足的条件，以确保数据的有效性和一致性。如果检查约束中的条件不满足，MySQL将拒绝插入或更新操作。</p>\n<p>语法格式如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE table_name (\n    column1 datatype,\n    column2 datatype,\n    ...\n    CHECK (condition);\n);</code></pre>\n\n<p>或者在已有表上添加检查约束：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CHECK (condition);</code></pre>\n\n<p>其中，<code>condition</code> 是一个逻辑表达式，表示需要满足的条件。如果 <code>condition</code> 为真，操作将被允许，否则将被拒绝。</p>\n<h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>假设我们有一个存储订单信息的表，要求订单的总金额不能为负数：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    total_amount DECIMAL(10,2),\n    CHECK (total_amount &gt;= 0)\n);</code></pre>\n\n<p>在这个例子中，我们使用检查约束确保 <code>total_amount</code> 列的值必须大于等于零。如果尝试插入或更新一条订单，使得总金额小于零，系统将拒绝这个操作。</p>\n<h3 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h3><ol>\n<li><strong>CHECK约束条件：</strong> <code>condition</code> 中可以包含对一列或多列的条件，以及多个逻辑操作符（AND、OR、NOT）。</li>\n<li><strong>可选性：</strong> CHECK约束是可选的，你可以选择使用或不使用它，具体取决于业务需求。</li>\n<li><strong>兼容性：</strong> 需要注意的是，MySQL在早期版本中对CHECK约束的支持并不完整，因此在使用CHECK约束时需要确保使用的MySQL版本支持这一特性。</li>\n</ol>\n<p>这玩意也不常用，一般都靠我们的后端来进行校验，数据库层面一般很少做校验的。</p>\n<h1 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h1><p>没想到啊，这个课件真是误人子弟，说MySQL的字符串比较是不区分大小写的。。。</p>\n<p>其实，字符串的比较是否区分大小写，本质上，MySQL的默认字符串比较是取决于所使用的字符集和排序规则（collation）的。一般而言，对于一些常见的字符集，例如UTF-8，其默认的排序规则通常是不区分大小写的，但这并不是绝对的。</p>\n<p>在MySQL中，可以通过查看字符集和排序规则的默认值来了解默认的字符串比较行为。例如，对于UTF-8字符集，<code>utf8_general_ci</code>是一个常见的不区分大小写的排序规则，而<code>utf8_bin</code>是区分大小写的规则。</p>\n<p>这个<code>bin</code>就是二进制<code>binary</code>的简写。</p>\n<h2 id=\"二进制比较\"><a href=\"#二进制比较\" class=\"headerlink\" title=\"二进制比较\"></a>二进制比较</h2><ul>\n<li><strong>基于字节比较：</strong> 二进制比较将字符串视为一系列字节，而不考虑字符的编码。每个字符都是由一个或多个字节组成的。</li>\n<li><strong>区分大小写：</strong> 二进制比较是区分大小写的，即大写字母和小写字母被视为不同的值。</li>\n<li><strong>不受字符集和排序规则影响：</strong> 二进制比较不考虑字符集和排序规则，直接比较字符串的字节。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT 'abc' = BINARY 'ABC';  -- 返回 0，因为它是区分大小写的二进制比较</code></pre>\n\n<h2 id=\"字符集比较\"><a href=\"#字符集比较\" class=\"headerlink\" title=\"字符集比较\"></a>字符集比较</h2><ul>\n<li><strong>基于字符比较：</strong> 字符集比较考虑字符的编码和排序规则。字符集规定了字符的编码方式，而排序规则定义了字符串的排序规则，包括如何处理大小写、重音符号等。</li>\n<li><strong>可能不区分大小写：</strong> 根据具体的字符集和排序规则，字符集比较可能是区分大小写的，也可能是不区分大小写的。</li>\n<li><strong>受字符集和排序规则影响：</strong> 字符集比较会受到所使用的字符集和排序规则的影响。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT 'abc' COLLATE utf8_general_ci = 'ABC' COLLATE utf8_general_ci;  -- 返回 1，因为它是不区分大小写的字符集比较</code></pre>\n\n<h2 id=\"选择使用的情况\"><a href=\"#选择使用的情况\" class=\"headerlink\" title=\"选择使用的情况\"></a>选择使用的情况</h2><ul>\n<li><strong>二进制比较：</strong> 适用于需要完全区分大小写、直接比较字节的场景，或者在处理二进制数据时。</li>\n<li><strong>字符集比较：</strong> 适用于普通文本字符串的比较，可以根据语言、地区等要求选择合适的字符集和排序规则，确保字符串的比较和排序符合预期。</li>\n</ul>\n<p>好，那么其实在MySQL当中会有一些默认的情况会使用字符集比较，比如在主键和唯一键的判断当中，就会默认使用字符集比较，而且并不是二进制比较，这也是课件说MySQL的字符串比较是不区分大小写的原因。</p>\n<p>在MySQL中，主键和唯一键（Unique Key）的约束条件判断默认是受到字符集和排序规则的影响的。具体来说，如果使用的字符集和排序规则是区分大小写的，那么主键和唯一键的约束条件也会区分大小写；如果字符集和排序规则是不区分大小写的，那么约束条件也会不区分大小写。</p>\n<p>比如：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE example_table (\n    id INT PRIMARY KEY,\n    name VARCHAR(50) UNIQUE\n) COLLATE utf8_general_ci;</code></pre>\n\n<p>在上述例子中，表 <code>example_table</code> 的字符集和排序规则被指定为 <code>utf8_general_ci</code>，这是一个不区分大小写的排序规则。因此，主键和唯一键 <code>name</code> 的约束条件在比较时将不区分大小写。</p>\n<p>如果你使用的字符集和排序规则是区分大小写的，你可以在创建表时显式指定，例如：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE example_table (\n    id INT PRIMARY KEY,\n    name VARCHAR(50) UNIQUE\n) COLLATE utf8_bin;</code></pre>\n\n<p>在这种情况下，主键和唯一键 <code>name</code> 的约束条件将区分大小写。</p>\n<p>而二进制比较只会在你使用<code>BINARY</code>关键字的时候才会使用。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>字符集的比较在以下情况下非常重要：</p>\n<ol>\n<li><strong>文本搜索和匹配：</strong> 如果你的应用需要执行基于文本的搜索、匹配或过滤操作，字符集比较就变得至关重要。例如，你可能希望在数据库中执行不区分大小写的搜索，或者处理包含重音符号的字符。</li>\n<li><strong>排序和比较：</strong> 如果你需要对字符串进行排序，或者在查询中进行字符串的比较，字符集和排序规则就会影响到排序的结果和比较的行为。在不同的语言环境下，字符集和排序规则的选择可能有所不同。</li>\n<li><strong>唯一性约束：</strong> 当你在数据库中定义唯一键或唯一索引时，字符集和排序规则会影响到是否区分大小写。这对于确保唯一性约束的正确性非常重要。</li>\n<li><strong>国际化和多语言支持：</strong> 如果你的应用需要支持多种语言，特别是包含非拉丁字符的语言，选择正确的字符集和排序规则是确保正确处理和显示文本的关键。</li>\n<li><strong>用户输入和输出：</strong> 当用户与应用交互时，字符集和排序规则会影响到用户输入的处理和在界面上显示的文本。确保使用合适的字符集可以提供更好的用户体验。</li>\n</ol></blockquote>\n<h1 id=\"ALTER语句\"><a href=\"#ALTER语句\" class=\"headerlink\" title=\"ALTER语句\"></a><code>ALTER</code>语句</h1><p>前面也看到了很多<code>ALTER</code>的操作，一般都是在表格创建好之后，如果对于表还有什么额外的操作，那么我们就可以使用这个关键字，来进行一些额外的操作。</p>\n<p>这里就进行一下关于这个语句的一些总结。</p>\n<h3 id=\"1-添加列：\"><a href=\"#1-添加列：\" class=\"headerlink\" title=\"1. 添加列：\"></a>1. 添加列：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD COLUMN column_name datatype;</code></pre>\n\n<p>这将在指定的表中添加一个新列。</p>\n<h3 id=\"2-修改列的数据类型：\"><a href=\"#2-修改列的数据类型：\" class=\"headerlink\" title=\"2. 修改列的数据类型：\"></a>2. 修改列的数据类型：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nMODIFY COLUMN column_name new_datatype;</code></pre>\n\n<p>这将更改表中指定列的数据类型。</p>\n<h3 id=\"3-修改列的名称：\"><a href=\"#3-修改列的名称：\" class=\"headerlink\" title=\"3. 修改列的名称：\"></a>3. 修改列的名称：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nCHANGE COLUMN old_column_name new_column_name datatype;</code></pre>\n\n<p>这将修改表中指定列的名称和数据类型。</p>\n<h3 id=\"4-删除列：\"><a href=\"#4-删除列：\" class=\"headerlink\" title=\"4. 删除列：\"></a>4. 删除列：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nDROP COLUMN column_name;</code></pre>\n\n<p>这将从表中删除指定的列。</p>\n<h3 id=\"5-添加主键：\"><a href=\"#5-添加主键：\" class=\"headerlink\" title=\"5. 添加主键：\"></a>5. 添加主键：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD PRIMARY KEY (column1, column2, ...);</code></pre>\n\n<p>这将在表上添加主键。</p>\n<h3 id=\"6-移除主键：\"><a href=\"#6-移除主键：\" class=\"headerlink\" title=\"6. 移除主键：\"></a>6. 移除主键：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nDROP PRIMARY KEY;</code></pre>\n\n<p>这将从表上移除主键。</p>\n<h3 id=\"7-添加外键：\"><a href=\"#7-添加外键：\" class=\"headerlink\" title=\"7. 添加外键：\"></a>7. 添加外键：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nADD CONSTRAINT fk_name\nFOREIGN KEY (column_name)\nREFERENCES referenced_table(referenced_column);</code></pre>\n\n<p>这将在表上添加外键约束。</p>\n<h3 id=\"8-移除外键：\"><a href=\"#8-移除外键：\" class=\"headerlink\" title=\"8. 移除外键：\"></a>8. 移除外键：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE table_name\nDROP FOREIGN KEY fk_name;</code></pre>\n\n<p>这将从表上移除指定的外键约束。</p>\n<h3 id=\"9-修改表名：\"><a href=\"#9-修改表名：\" class=\"headerlink\" title=\"9. 修改表名：\"></a>9. 修改表名：</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">ALTER TABLE old_table_name\nRENAME TO new_table_name;</code></pre>\n\n<p>其实之前都见过，这里只是做个总结。</p>\n","text":"今天继续复习MySQL当中比较重要的一点，但是前面也已经涉及到了，就是MySQL中的约束。 但是其实前面的UNIQUE，PRIMARY之类的也算约束。 约束在关系数据库中，约束是一种用于定义和强制表中数据规则的机制。约束确保了数据的完整性、一致性和可靠性。通过使用约束，数据库管理...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":46,"path":"api/tags/笔记.json"},{"name":"MySQL复习","slug":"MySQL复习","count":10,"path":"api/tags/MySQL复习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">语法格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">主键约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">外键约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%94%AF%E4%B8%80%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">唯一约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">检查约束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%94%AE\"><span class=\"toc-text\">外键</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E7%85%A7%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">参照选项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E5%A4%96%E9%94%AE%EF%BC%9F\"><span class=\"toc-text\">为什么使用外键？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%94%AE%E8%AF%AD%E6%B3%95%E4%B8%AD%E7%9A%84%E5%93%AA%E4%B8%AA%E6%98%AF%E5%BC%95%E7%94%A8%E8%A1%A8%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%98%AF%E5%A4%96%E9%94%AE%E8%A1%A8%EF%BC%9F\"><span class=\"toc-text\">外键语法中的哪个是引用表，哪个是外键表？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E8%A2%AB%E5%BC%95%E7%94%A8%E8%A1%A8%EF%BC%88departments%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">操作被引用表（departments）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E5%A4%96%E9%94%AE%E8%A1%A8%EF%BC%88employees%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">操作外键表（employees）：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5%E7%BA%A6%E6%9D%9F-1\"><span class=\"toc-text\">检查约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B-1\"><span class=\"toc-text\">示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%9A\"><span class=\"toc-text\">注意事项：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">字符串比较</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">二进制比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E9%9B%86%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">字符集比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8%E7%9A%84%E6%83%85%E5%86%B5\"><span class=\"toc-text\">选择使用的情况</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ALTER%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">ALTER语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B7%BB%E5%8A%A0%E5%88%97%EF%BC%9A\"><span class=\"toc-text\">1. 添加列：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BF%AE%E6%94%B9%E5%88%97%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9A\"><span class=\"toc-text\">2. 修改列的数据类型：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BF%AE%E6%94%B9%E5%88%97%E7%9A%84%E5%90%8D%E7%A7%B0%EF%BC%9A\"><span class=\"toc-text\">3. 修改列的名称：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%88%A0%E9%99%A4%E5%88%97%EF%BC%9A\"><span class=\"toc-text\">4. 删除列：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%B7%BB%E5%8A%A0%E4%B8%BB%E9%94%AE%EF%BC%9A\"><span class=\"toc-text\">5. 添加主键：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%A7%BB%E9%99%A4%E4%B8%BB%E9%94%AE%EF%BC%9A\"><span class=\"toc-text\">6. 移除主键：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E6%B7%BB%E5%8A%A0%E5%A4%96%E9%94%AE%EF%BC%9A\"><span class=\"toc-text\">7. 添加外键：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E7%A7%BB%E9%99%A4%E5%A4%96%E9%94%AE%EF%BC%9A\"><span class=\"toc-text\">8. 移除外键：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E4%BF%AE%E6%94%B9%E8%A1%A8%E5%90%8D%EF%BC%9A\"><span class=\"toc-text\">9. 修改表名：</span></a></li></ol></li></ol></li></ol>","author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}},"mapped":true,"prev_post":{"title":"MySQL Review-4","uid":"3cf8efd46ba4d0ca921476f1afc68b5c","slug":"MySQL-Review-4","date":"2023-12-06T05:45:33.000Z","updated":"2023-12-06T09:49:39.696Z","comments":true,"path":"api/articles/MySQL-Review-4.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/MySQL-image.png","text":"今天来继续复习MySQL中的SELECT语句，也是以后基本上用的最多的查询操作。 SELECT一般形式SELECT主要用于从数据库当中检索数据，这是它的一般形式。 SELECT column1, column2, ... FROM table_name WHERE conditi...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":46,"path":"api/tags/笔记.json"},{"name":"MySQL复习","slug":"MySQL复习","count":10,"path":"api/tags/MySQL复习.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}},"next_post":{"title":"CPT101 Review-1","uid":"ca462487924054497383c1abea48a162","slug":"CPT101-Review-1","date":"2023-12-03T07:50:09.000Z","updated":"2023-12-03T08:51:58.666Z","comments":true,"path":"api/articles/CPT101-Review-1.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/CPT101-img.png","text":"今天复习CPT101，在我看来全是死记硬背的东西，但是不背又不行，唉 我看课件感觉好多废话，但是我又不知道到底会不会考，我真无语了 计算机的分类计算机主要可以分为四个主要阶段，分别是：大型计算机，超级计算机，工作站，微型计算机，个人电脑。 Mainframe Computers（...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"CPT101复习","slug":"CPT101复习","count":5,"path":"api/tags/CPT101复习.json"},{"name":"笔记","slug":"笔记","count":46,"path":"api/tags/笔记.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}}}