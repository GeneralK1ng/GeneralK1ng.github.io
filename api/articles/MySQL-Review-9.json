{"title":"MySQL Review-9","uid":"501d84f5a19f74694418ac5dda2db98c","slug":"MySQL-Review-9","date":"2023-12-07T11:54:31.000Z","updated":"2023-12-08T07:08:43.977Z","comments":true,"path":"api/articles/MySQL-Review-9.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/MySQL-image.png","content":"<p>这一章开始就是我们所谓的八股文了，但是考试又要考，你拿他有什么办法？</p>\n<h1 id=\"数据库设计\"><a href=\"#数据库设计\" class=\"headerlink\" title=\"数据库设计\"></a>数据库设计</h1><p>设计数据库，这是开发过程中非常关键的一个步骤，它涉及到如何组织和存储数据，以便系统可以有效地检索和管理信息。</p>\n<ol>\n<li><strong>需求分析：</strong> 在设计数据库之前，首先需要了解系统的需求。这包括确定系统将要存储和处理的数据类型，以及用户希望从数据库中检索的信息。</li>\n<li><strong>概念设计：</strong> 在这个阶段，你需要识别和定义系统中的实体，这些实体可以是人、地点、事件等。还需要确定这些实体之间的关系。使用实体-关系图（ER图）等工具进行可视化表示。</li>\n<li><strong>逻辑设计：</strong> 将概念设计转换为逻辑设计。在这个阶段，你需要确定如何将实体和关系转换为数据库表。每个实体应该成为一个表，每个属性应该成为表中的列。确定主键、外键等约束。</li>\n<li><strong>规范化：</strong> 数据库规范化是一个重要的步骤，它有助于减少数据冗余并提高数据库的性能。规范化的目标是将数据组织成符合某种标准形式的表，以便降低冗余并提高数据存储效率。</li>\n</ol>\n<p>接下来就是建表，外键，约束这些东西了，这一节应该目的在于抽象地教你如何进行数据库建表前的准备设计工作，让你有的放矢。</p>\n<h2 id=\"实体-关系建模\"><a href=\"#实体-关系建模\" class=\"headerlink\" title=\"实体-关系建模\"></a>实体-关系建模</h2><p>实体-关系建模（Entity-Relationship Modeling，简称ER建模）是一种用于可视化和描述数据库中数据结构的方法。ER建模是数据库设计的早期阶段，它通过图形化表示来表达实体、属性和实体之间的关系。这种建模方法通常使用实体-关系图（ER图）。</p>\n<p>以下是ER建模中的关键概念：</p>\n<ol>\n<li><p><strong>实体（Entity）：</strong> 实体是系统中可以区分和识别的一个独立的事物，它可以是一个对象、一个人、一个地点或一个概念。在ER图中，实体通常用圆角框表示。</p>\n</li>\n<li><p><strong>属性（Attribute）：</strong> 属性是描述实体特征的信息，它为实体提供更多的详细信息。例如，一个”学生”实体可以有属性如姓名、学号、出生日期等。属性通常用椭圆形表示。</p>\n</li>\n<li><p><strong>关系（Relationship）：</strong> 关系表示实体之间的联系。在ER图中，关系通常用菱形表示，链接的末端显示基数。关系可以是一对一、一对多或多对多的。例如，一个”学生”实体和一个”课程”实体之间可以有关系，表示学生和课程之间的选修关系。</p>\n<h2 id=\"基数比\"><a href=\"#基数比\" class=\"headerlink\" title=\"基数比\"></a>基数比</h2></li>\n</ol>\n<p>Cardinality Ratios（基数比率）是在实体-关系模型（ER模型）中用于描述实体之间关系的一个重要概念。它指的是一个关系中参与的实体之间的数量关系。Cardinality Ratios有三种主要类型：一对一（One-to-One）、一对多（One-to-Many）、多对多（Many-to-Many）。</p>\n<ol>\n<li><strong>一对一（One-to-One）：</strong><ul>\n<li>在一对一关系中，一个实体的一个实例只能关联到另一个实体的一个实例，反之亦然。</li>\n<li>例如，一个人可能只有一个身份证号码，而一个身份证号码也只能对应一个人。</li>\n</ul>\n</li>\n<li><strong>一对多（One-to-Many）：</strong><ul>\n<li>在一对多关系中，一个实体的一个实例可以关联到另一个实体的多个实例，但反过来不成立。</li>\n<li>例如，一个作者可以写多本书，但一本书只能由一个作者编写。</li>\n</ul>\n</li>\n<li><strong>多对多（Many-to-Many）：</strong><ul>\n<li>在多对多关系中，一个实体的多个实例可以关联到另一个实体的多个实例，这是一种比较灵活的关系。</li>\n<li>例如，学生可以选择多门课程，而一门课程也可以被多个学生选修。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"设计ER模型\"><a href=\"#设计ER模型\" class=\"headerlink\" title=\"设计ER模型\"></a>设计ER模型</h2><p>ER建模的步骤如下：</p>\n<ol>\n<li><strong>识别实体：</strong> 从需求分析中确定系统中的实体，这可以是物理实体或概念实体。</li>\n<li><strong>识别属性：</strong> 为每个实体确定相关的属性，这些属性描述了实体的特征。</li>\n<li><strong>确定关系：</strong> 确定实体之间的关系，表示实体之间的联系。</li>\n<li><strong>确定主键：</strong> 为每个实体确定主键，确保每个实体都有一个唯一标识。</li>\n<li><strong>确定外键：</strong> 在需要的情况下，确定外键以建立实体之间的关联。</li>\n<li><strong>绘制ER图：</strong> 使用ER图工具（纸和笔、绘图软件等）绘制实体、属性、关系之间的图形表示。</li>\n</ol>\n<p> 按照学校的例子：</p>\n<p>一所大学由若干系组成。每个系提供若干门课程。每门课程由若干模块组成。学生注册某门课程，并在完成该课程时学习模块。每个模块由相应系的一名讲师教授（几名讲师在同一系工作），每个讲师辅导一组学生。一名讲师可以教授多个模块，但只能在一个系工作。</p>\n<h3 id=\"1-实体识别：\"><a href=\"#1-实体识别：\" class=\"headerlink\" title=\"1. 实体识别：\"></a>1. 实体识别：</h3><ul>\n<li>学校（University）</li>\n<li>部门（Department）</li>\n<li>课程（Course）</li>\n<li>模块（Module）</li>\n<li>学生（Student）</li>\n<li>讲师（Lecturer）</li>\n</ul>\n<h3 id=\"2-属性定义：\"><a href=\"#2-属性定义：\" class=\"headerlink\" title=\"2. 属性定义：\"></a>2. 属性定义：</h3><h4 id=\"学校（University）：\"><a href=\"#学校（University）：\" class=\"headerlink\" title=\"学校（University）：\"></a>学校（University）：</h4><ul>\n<li>属性：<code>UniversityID </code>(Primary Key), <code>Name</code>, <code>Location</code></li>\n</ul>\n<h4 id=\"部门（Department）：\"><a href=\"#部门（Department）：\" class=\"headerlink\" title=\"部门（Department）：\"></a>部门（Department）：</h4><ul>\n<li>属性：<code>DepartmentID</code> (Primary Key), <code>Name</code></li>\n</ul>\n<h4 id=\"课程（Course）：\"><a href=\"#课程（Course）：\" class=\"headerlink\" title=\"课程（Course）：\"></a>课程（Course）：</h4><ul>\n<li>属性：<code>CourseID</code> (Primary Key), <code>Name</code></li>\n</ul>\n<h4 id=\"模块（Module）：\"><a href=\"#模块（Module）：\" class=\"headerlink\" title=\"模块（Module）：\"></a>模块（Module）：</h4><ul>\n<li>属性：<code>ModuleID</code> (Primary Key), <code>Name</code></li>\n</ul>\n<h4 id=\"学生（Student）：\"><a href=\"#学生（Student）：\" class=\"headerlink\" title=\"学生（Student）：\"></a>学生（Student）：</h4><ul>\n<li>属性：<code>StudentID</code> (Primary Key), <code>Name</code>, <code>Address</code>, <code>DateOfBirth</code></li>\n</ul>\n<h4 id=\"讲师（Lecturer）：\"><a href=\"#讲师（Lecturer）：\" class=\"headerlink\" title=\"讲师（Lecturer）：\"></a>讲师（Lecturer）：</h4><ul>\n<li>属性：<code>LecturerID</code> (Primary Key), <code>Name</code>, <code>Address</code>, <code>DateOfBirth</code></li>\n</ul>\n<h3 id=\"3-关系识别：\"><a href=\"#3-关系识别：\" class=\"headerlink\" title=\"3. 关系识别：\"></a>3. 关系识别：</h3><ul>\n<li>学校（University）与部门（Department）之间存在一对多关系，一个学校可以有多个部门，但一个部门只属于一个学校。</li>\n<li>部门（Department）与课程（Course）之间存在一对多关系，一个部门可以提供多门课程，但一门课程只属于一个部门。</li>\n<li>课程（Course）与模块（Module）之间存在一对多关系，一门课程可以包括多个模块，但一个模块只属于一门课程。</li>\n<li>学生（Student）与课程（Course）之间存在多对多关系，一个学生可以注册多门课程，一门课程也可以有多名学生。</li>\n<li>模块（Module）与讲师（Lecturer）之间存在一对多关系，一个模块由一个讲师教授，但一个讲师可以教授多个模块。</li>\n<li>讲师（Lecturer）与部门（Department）之间存在一对多关系，一个讲师属于一个部门，但一个部门可以有多个讲师。</li>\n</ul>\n<h3 id=\"4-主键和外键：\"><a href=\"#4-主键和外键：\" class=\"headerlink\" title=\"4. 主键和外键：\"></a>4. 主键和外键：</h3><ul>\n<li>每个实体都有一个主键（Primary Key）用于唯一标识实体的每个实例。</li>\n<li>外键（Foreign Key）用于建立实体之间的关系。例如，部门（Department）表中的<code>UniversityID</code>可以作为外键与学校（University）表中的<code>UniversityID</code>关联。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/erExample-1.png\"></p>\n<p>这个就是一个简单的ER图，以下是它的主键和外键关系。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/erExample-2.png\"></p>\n<p>这里图里面的一对多，多对多啊这些的只是为了方便呈现，其实按照学校的要求这里应该写两者之间的关系名称，然后用菱形方框框起来，而且属性必须用椭圆形分别连出来，但是我的画图工具并不支持，所以记住就行。</p>\n","text":"这一章开始就是我们所谓的八股文了，但是考试又要考，你拿他有什么办法？ 数据库设计设计数据库，这是开发过程中非常关键的一个步骤，它涉及到如何组织和存储数据，以便系统可以有效地检索和管理信息。 需求分析： 在设计数据库之前，首先需要了解系统的需求。这包括确定系统将要存储和处理的数据类...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":48,"path":"api/tags/笔记.json"},{"name":"MySQL复习","slug":"MySQL复习","count":10,"path":"api/tags/MySQL复习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">数据库设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BD%93-%E5%85%B3%E7%B3%BB%E5%BB%BA%E6%A8%A1\"><span class=\"toc-text\">实体-关系建模</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%95%B0%E6%AF%94\"><span class=\"toc-text\">基数比</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1ER%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">设计ER模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">1. 实体识别：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%B1%9E%E6%80%A7%E5%AE%9A%E4%B9%89%EF%BC%9A\"><span class=\"toc-text\">2. 属性定义：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E6%A0%A1%EF%BC%88University%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">学校（University）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E9%97%A8%EF%BC%88Department%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">部门（Department）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E7%A8%8B%EF%BC%88Course%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">课程（Course）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%EF%BC%88Module%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">模块（Module）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E7%94%9F%EF%BC%88Student%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">学生（Student）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%B2%E5%B8%88%EF%BC%88Lecturer%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">讲师（Lecturer）：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%85%B3%E7%B3%BB%E8%AF%86%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">3. 关系识别：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E4%B8%BB%E9%94%AE%E5%92%8C%E5%A4%96%E9%94%AE%EF%BC%9A\"><span class=\"toc-text\">4. 主键和外键：</span></a></li></ol></li></ol></li></ol>","author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}},"mapped":true,"prev_post":{"title":"MySQL Review-10","uid":"ef8bd82be23cedfc8cb7a2a8f2b9f3ab","slug":"MySQL-Review-10","date":"2023-12-08T07:08:26.000Z","updated":"2023-12-08T08:13:38.093Z","comments":true,"path":"api/articles/MySQL-Review-10.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/MySQL-image.png","text":"继续来到数据库的规范化，也就是一种优化数据库结构的一种范式。 数据库的规范化良好数据库设计规范最小化属性数量： 数据库应该包含最少数量的属性，足以支持企业的数据需求。这有助于保持数据库的简洁性，提高查询效率，并降低维护成本。只有必要的属性应该包含在数据库中，避免不必要的冗余。 具...","link":"","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":48,"path":"api/tags/笔记.json"},{"name":"MySQL复习","slug":"MySQL复习","count":10,"path":"api/tags/MySQL复习.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}},"next_post":{"title":"MySQL Review-8","uid":"d8d61b16d43fe3afec63384e99b4a265","slug":"MySQL-Review-8","date":"2023-12-06T11:13:57.000Z","updated":"2023-12-08T08:16:17.573Z","comments":true,"path":"api/articles/MySQL-Review-8.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/MySQL-image.png","text":"继续把索引一讲。。。 索引在MySQL中，索引是一种用于提高数据库查询性能的数据结构。它类似于书籍的目录，可以帮助数据库引擎快速定位和检索数据。索引的主要作用是加速数据的检索过程，减少数据库的查询时间。在MySQL中，常见的索引类型包括主键索引、唯一索引、普通索引、全文索引等。 ...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":48,"path":"api/tags/笔记.json"},{"name":"MySQL复习","slug":"MySQL复习","count":10,"path":"api/tags/MySQL复习.json"}],"author":{"name":"General_K1ng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/GeneralK1ng/My_Blog_IMG@main/img/avatar.png","link":"/","description":"一名正在努力学习计算机的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/BILIBILI.svg","link":"https://space.bilibili.com/32927332"},"csdn":{"icon":"/svg/csdn.svg","link":"https://blog.csdn.net/qq_34849354"},"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/GeneralK1ng"},"QQ":{"icon":"/svg/QQ.svg","link":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2822688858"}}}}}}